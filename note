/*	REDIRECTION '>'

**	CHECKER LE FICHIER INDIQUE APRES LA REDIR

**	SI N'EXISTE PAS -> CREER

**	SI EXISTE -> CHECKER LES DROITS

**	OPEN LE FICHIER

**	REMPLACER LE FD STDOUT PAR LE FD DU FICHIER

**	ECRASE LES DONNEES EXISTANTES

**	CASE : echo A >B>C>D -> CREE B C D ET ECRIT QUE DANS D

**	echo test >file test1 -> ECRIT test test1 DANS FILE

*/




/*	REDIRECTION '>>'

**	CHECKER LE FICHIER INDIQUE APRES LA REDIR

**	SI N'EXISTE PAS -> CREER

**	SI EXISTE -> CHECKER LES DROITS

**	OPEN LE FICHIER

**	REMPLACER LE FD STDOUT PAR LE FD DU FICHIER

**	ECRIT A LA SUITE DES DONNEES SI IL Y'EN A	

*/




/*	REDIRECTION '<'

**	CHECKER LE FICHIER INDIQUE APRES LA REDIR

**	SI N'EXISTE PAS -> ERROR

**	SI EXISTE -> CHECKER LES DROITS

**	OPEN LE FICHIER

**	REMPLACER LE FD STDIN PAR LE FD DU FICHIER

*/




/*	REDIRECTION '<<'

**	UTILISATION DU HEREDOC

**	L'ARG APRES LA REDIR EST LE 'DELIMITEUR'

**	

*/


O_CREAT : Si le fichier n'existe pas, il sera créé.

O_WRONLY : Ouvre le fichier en mode écriture seulement.

O_TRUNC : Si le fichier existe déjà, change sa taille à 0. En d'autres termes, il efface le contenu du fichier.

Ces flags sont généralement utilisés avec la fonction open() en C pour ouvrir un fichier avec des permissions spécifiques.

En ce qui concerne les permissions, voici ce que signifient les flags que vous avez mentionnés :

S_IRWXO : Donne des permissions de lecture, écriture et exécution au propriétaire du fichier.

S_IRWXU : Donne des permissions de lecture, écriture et exécution au groupe du fichier.

S_IRWXG : Donne des permissions de lecture, écriture et exécution à tous les autres utilisateurs.

Ces flags sont généralement utilisés avec la fonction open() en C pour définir les permissions d'un fichier lors de sa création